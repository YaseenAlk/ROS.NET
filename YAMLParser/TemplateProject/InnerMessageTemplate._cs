    public class $CLASS_NAME : $ACTION_CLASS
    {
        $$PROPERTIES

        public override string MD5Sum() { return "$MD5SUM"; }
        public override bool HasHeader() { return $HASHEADER; }
        public override bool IsMetaType() { return $ISMETA; }
        public override string MessageDefinition() { return $MESSAGEDEFINITION; }
        public override MsgTypes msgtype() { return $MSGTYPE; }
        public override bool IsServiceComponent() { return false; }

        public $CLASS_NAME()
        {
            $NULLCONSTBODY
        }

        public $CLASS_NAME(byte[] serializedMessage)
        {
            Deserialize(serializedMessage);
        }

        public $CLASS_NAME(byte[] serializedMessage, ref int currentIndex)
        {
            Deserialize(serializedMessage, ref currentIndex);
        }

        $EXTRACONSTRUCTOR

        public void Deserialize(byte[] serializedMessage, int currentIndex)
        {
            Deserialize(serializedMessage, currentIndex);
        }

        public override void Deserialize(byte[] serializedMessage, ref int currentIndex)
        {
            int arraylength = -1;
            bool hasmetacomponents = false;
            object __thing;
            int piecesize = 0;
            byte[] thischunk, scratch1, scratch2;
            IntPtr h;
            var SERIALIZEDSTUFF = serializedMessage;

            $DESERIALIZATIONCODE
        }

        public override byte[] Serialize(bool partofsomethingelse)
        {
            int currentIndex=0, length=0;
            bool hasmetacomponents = false;
            byte[] thischunk, scratch1, scratch2;
            List<byte[]> pieces = new List<byte[]>();
            GCHandle h;

            $SERIALIZATIONCODE

            // combine every array in pieces into one array and return it
            int __a_b__f = pieces.Sum((__a_b__c)=>__a_b__c.Length);
            int __a_b__e=0;
            byte[] __a_b__d = new byte[__a_b__f];
            foreach(var __p__ in pieces)
            {
                Array.Copy(__p__,0,__a_b__d,__a_b__e,__p__.Length);
                __a_b__e += __p__.Length;
            }
            return __a_b__d;
        }

        public override void Randomize()
        {
            int arraylength = -1;
            Random rand = new Random();
            int strlength;
            byte[] strbuf, myByte;

            $RANDOMIZATIONCODE
        }

        public override bool Equals(RosMessage message)
        {
            if (message == null)
            {
                return false;
            }
            bool ret = true;
            $CLASS_NAME other;
            try
            {
                other = ($CLASS_NAME)message;
            }
            catch
            {
                return false;
            }

            $EQUALITYCODE

            return ret;
        }
    }
