using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.Runtime.InteropServices;
using uint8 = System.Byte;
using Messages.geometry_msgs;
using Messages.sensor_msgs;
using Messages.actionlib_msgs;

namespace Messages
{
    public class $GOAL_CLASS : RosMessage
    {
        $$ENTRY_POINT_GOAL

        public override string MD5Sum() { return "$GOAL_MD5SUM"; }
        public override bool HasHeader() { return $GOAL_HASHEADER; }
        public override bool IsMetaType() { return $GOAL_ISMETA; }
        public override string MessageDefinition() { return $GOAL_MESSAGEDEFINITION; }
        public override MsgTypes msgtype() { return $GOAL_MSGTYPE; }
        public override bool IsServiceComponent() { return false; }

        public $GOAL_CLASS()
        {
            $GOAL_NULLCONSTBODY
        }

        public $GOAL_CLASS(byte[] serializedMessage)
        {
            Deserialize(serializedMessage);
        }

        public $GOAL_CLASS(byte[] serializedMessage, ref int currentIndex)
        {
            Deserialize(serializedMessage, ref currentIndex);
        }

$GOAL_EXTRACONSTRUCTOR

        public override void Deserialize(byte[] serializedMessage, ref int currentIndex)
        {
            int arraylength = -1;
            bool hasmetacomponents = false;
            object __thing;
            int piecesize = 0;
            byte[] thischunk, scratch1, scratch2;
            IntPtr h;
			var SERIALIZEDSTUFF = serializedMessage;
            $GOAL_DESERIALIZATIONCODE
        }

        public override byte[] Serialize(bool partofsomethingelse)
        {
            int currentIndex=0, length=0;
            bool hasmetacomponents = false;
            byte[] thischunk, scratch1, scratch2;
            List<byte[]> pieces = new List<byte[]>();
            GCHandle h;
            $GOAL_SERIALIZATIONCODE
            // combine every array in pieces into one array and return it
            int __a_b__f = pieces.Sum((__a_b__c)=>__a_b__c.Length);
            int __a_b__e=0;
            byte[] __a_b__d = new byte[__a_b__f];
            foreach(var __p__ in pieces)
            {
                Array.Copy(__p__,0,__a_b__d,__a_b__e,__p__.Length);
                __a_b__e += __p__.Length;
            }
            return __a_b__d;
        }

        public override void Randomize()
        {
            int arraylength = -1;
            Random rand = new Random();
            int strlength;
            byte[] strbuf, myByte;
            $GOAL_RANDOMIZATIONCODE
        }

        public override bool Equals(RosMessage other)
        {
            if (____other == null)
				return false;
            bool ret = true;
            $GOAL_EQUALITYCODE
            // for each SingleType st:
            //    ret &= {st.Name} == other.{st.Name};
            return ret;
        }
    }


	public class $RESULT_CLASS : RosMessage
    {
        $$ENTRY_POINT_RESULT

        public override string MD5Sum() { return "$RESULT_MD5SUM"; }
        public override bool HasHeader() { return $RESULT_HASHEADER; }
        public override bool IsMetaType() { return $RESULT_ISMETA; }
        public override string MessageDefinition() { return $RESULT_MESSAGEDEFINITION; }
        public override MsgTypes msgtype() { return $RESULT_MSGTYPE; }
        public override bool IsServiceComponent() { return false; }

        public $RESULT_CLASS()
        {
            $RESULT_NULLCONSTBODY
        }

        public $RESULT_CLASS(byte[] serializedMessage)
        {
            Deserialize(serializedMessage);
        }

        public $RESULT_CLASS(byte[] serializedMessage, ref int currentIndex)
        {
            Deserialize(serializedMessage, ref currentIndex);
        }

$RESULT_EXTRACONSTRUCTOR

        public override void Deserialize(byte[] serializedMessage, ref int currentIndex)
        {
            int arraylength = -1;
            bool hasmetacomponents = false;
            object __thing;
            int piecesize = 0;
            byte[] thischunk, scratch1, scratch2;
            IntPtr h;
			var SERIALIZEDSTUFF = serializedMessage;
            $RESULT_DESERIALIZATIONCODE
        }

        public override byte[] Serialize(bool partofsomethingelse)
        {
            int currentIndex=0, length=0;
            bool hasmetacomponents = false;
            byte[] thischunk, scratch1, scratch2;
            List<byte[]> pieces = new List<byte[]>();
            GCHandle h;
            $RESULT_SERIALIZATIONCODE
            // combine every array in pieces into one array and return it
            int __a_b__f = pieces.Sum((__a_b__c)=>__a_b__c.Length);
            int __a_b__e=0;
            byte[] __a_b__d = new byte[__a_b__f];
            foreach(var __p__ in pieces)
            {
                Array.Copy(__p__,0,__a_b__d,__a_b__e,__p__.Length);
                __a_b__e += __p__.Length;
            }
            return __a_b__d;
        }

        public override void Randomize()
        {
            int arraylength = -1;
            Random rand = new Random();
            int strlength;
            byte[] strbuf, myByte;
            $RESULT_RANDOMIZATIONCODE
        }

        public override bool Equals(RosMessage other)
        {
            if (____other == null)
				return false;
            bool ret = true;
            $RESULT_EQUALITYCODE
            // for each SingleType st:
            //    ret &= {st.Name} == other.{st.Name};
            return ret;
        }
    }


	public class $FEEDBACK_CLASS : RosMessage
    {
        $$ENTRY_POINT_FEEDBACK

        public override string MD5Sum() { return "$FEEDBACK_MD5SUM"; }
        public override bool HasHeader() { return $FEEDBACK_HASHEADER; }
        public override bool IsMetaType() { return $FEEDBACK_ISMETA; }
        public override string MessageDefinition() { return $FEEDBACK_MESSAGEDEFINITION; }
        public override MsgTypes msgtype() { return $FEEDBACK_MSGTYPE; }
        public override bool IsServiceComponent() { return false; }

        public $FEEDBACK_CLASS()
        {
            $FEEDBACK_NULLCONSTBODY
        }

        public $FEEDBACK_CLASS(byte[] serializedMessage)
        {
            Deserialize(serializedMessage);
        }

        public $FEEDBACK_CLASS(byte[] serializedMessage, ref int currentIndex)
        {
            Deserialize(serializedMessage, ref currentIndex);
        }

$FEEDBACK_EXTRACONSTRUCTOR

        public override void Deserialize(byte[] serializedMessage, ref int currentIndex)
        {
            int arraylength = -1;
            bool hasmetacomponents = false;
            object __thing;
            int piecesize = 0;
            byte[] thischunk, scratch1, scratch2;
            IntPtr h;
			var SERIALIZEDSTUFF = serializedMessage;
            $FEEDBACK_DESERIALIZATIONCODE
        }

        public override byte[] Serialize(bool partofsomethingelse)
        {
            int currentIndex=0, length=0;
            bool hasmetacomponents = false;
            byte[] thischunk, scratch1, scratch2;
            List<byte[]> pieces = new List<byte[]>();
            GCHandle h;
            $FEEDBACK_SERIALIZATIONCODE
            // combine every array in pieces into one array and return it
            int __a_b__f = pieces.Sum((__a_b__c)=>__a_b__c.Length);
            int __a_b__e=0;
            byte[] __a_b__d = new byte[__a_b__f];
            foreach(var __p__ in pieces)
            {
                Array.Copy(__p__,0,__a_b__d,__a_b__e,__p__.Length);
                __a_b__e += __p__.Length;
            }
            return __a_b__d;
        }

        public override void Randomize()
        {
            int arraylength = -1;
            Random rand = new Random();
            int strlength;
            byte[] strbuf, myByte;
            $FEEDBACK_RANDOMIZATIONCODE
        }

        public override bool Equals(RosMessage other)
        {
            if (____other == null)
				return false;
            bool ret = true;
            $FEEDBACK_EQUALITYCODE
            // for each SingleType st:
            //    ret &= {st.Name} == other.{st.Name};
            return ret;
        }
    }
}